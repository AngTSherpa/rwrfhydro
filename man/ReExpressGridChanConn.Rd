% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/network_expression_gridded.R
\name{ReExpressGridChanConn}
\alias{ReExpressGridChanConn}
\title{ReExpress *gridded* stream networks indexed network traversal.}
\usage{
ReExpressGridChanConn(upstream, downstream, parallel = FALSE)
}
\arguments{
\item{upstream}{Integer, the index of the upstream chan grid from the index.}

\item{downstream}{Integer, the index of the downstream chan grid from the index.}

\item{parallel}{Logical use a registered backend for plyr?}
}
\value{
... have to run this to correctly describe... JLM TODO
}
\description{
\code{ReExpNetwork} re-expresses topological relationships between two variables,
up- and down- stream traversal, depending on the upstream argument.
}
\examples{
\dontrun{
  library(rwrfhydro)
  ncdump('~/ncar/WRF_Hydro/DOMAIN_library/Col_Bldr_Creek/CHANNEL_CONNECTIVITY.nc')
  TO_NODE <-
  ncdump('~/ncar/WRF_Hydro/DOMAIN_library/Col_Bldr_Creek/CHANNEL_CONNECTIVITY.nc',
         'TO_NODE', quiet=TRUE)
  FROM_NODE <-
  ncdump('~/ncar/WRF_Hydro/DOMAIN_library/Col_Bldr_Creek/CHANNEL_CONNECTIVITY.nc',
         'FROM_NODE', quiet=TRUE)
  doMC::registerDoMC(4)
  newCon <- ReExpressGridChanConn(FROM_NODE, TO_NODE)
  upstream <- newCon$upstream
  downstream <- newCon$downstream
  TO_NODE[which(is.na(TO_NODE))] <- 0
  done <- for(ii in 1:length(TO_NODE)) CheckReGridConnUp(ii)
  done <- for(ii in 1:length(TO_NODE)) CheckReGridConnDown(ii)
 save(upstream,downstream,
      file='~/ncar/WRF_Hydro/DOMAIN_library/Col_Bldr_Creek/newConnectivity.Rdb')
}
}
\concept{
dataMgmt
}
\keyword{manip}

