% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_expression.R
\name{CheckConn}
\alias{CheckConn}
\title{CheckConn checks a re-expressed network.}
\usage{
CheckConn(ind, upstream = TRUE, printInds = FALSE)
}
\arguments{
\item{ind}{The indices to check.}

\item{upstream}{Logical, check connectivity upstream (TRUE) or downstream (FALSE).}

\item{printInds}{Logical, print the indices checked.}
}
\value{
Logical, code halts at first FALSE.
}
\description{
\code{CheckConn} checks that a re-expressed network matches it's original expression.
}
\examples{
\dontrun{
  for (ii in seq(1,2720000,1000)) { print(ii); print(CheckConn(ii)) }
  for (ii in seq(1,2720000,1000)) { print(ii); print(CheckConn(ii), up=FALSE) }
  for (ii in seq(1,2000)) { print(ii); print(CheckConn(ii)) }
  for (ii in seq(1,2000)) { print(ii); print(CheckConn(ii),up=FALSE) }
  }
}
\concept{
dataMgmt nudging
}
\keyword{manip}

